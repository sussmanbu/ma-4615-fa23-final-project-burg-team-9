{
  "hash": "549d772b333b710f3d1e46f8ecf32c05",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 4\"\nauthor: \"\"\ndate: \"2023-11-13\"\ndate-modified: \"2023-11-13\"\ndraft: FALSE\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nload(here::here(\"dataset/traffic_violations.RData\"))\n \nwd <- traffic_data_clean %>% \n  rename(Arrest_Type = `Arrest Type`)\n \n# Race vs Arrest Type\nggplot(wd, aes(x = Race, fill = Arrest_Type)) + \n  geom_bar(position = \"dodge\") + \n  labs(title = \"Distribution of Race by Arrest Type\", \n       x = \"Race\", y = \"Count\",\n       fill = \"Arrest Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](blog-post-4_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(wd, aes(x = Race, fill = Accident)) + \n  geom_bar(position = \"dodge\") + \n  labs(title = \"Distribution of Race by Accident\", \n       x = \"Race\", y = \"Count\",\n       fill = \"Accident\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](blog-post-4_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Statistical Modeling\n\n# library(tidyverse)\n\ntraffic_data_clean <- traffic_data_clean |>\n  rename(time_of_stop = 'Time Of Stop')\n\ntraffic_data_clean <- traffic_data_clean |>\n  mutate(Accident = as.numeric(Accident == \"Yes\"))\n\ntraffic_data_clean <- traffic_data_clean |>\n  mutate(race_binary = as.numeric(Race == \"HISPANIC\"))\n\nmodel <- lm(Accident ~ time_of_stop + race_binary, data = traffic_data_clean)\n\ntraffic_data_clean <- traffic_data_clean |>\n  mutate(predictions = predict(model, newdata = traffic_data_clean))\n\nggplot(traffic_data_clean, aes(x = time_of_stop, y = Accident, color = Race)) +\n  geom_point(color = \"blue\") +\n  geom_line(aes(y = predictions), color = \"red\") +\n  labs(\n    title = \"Linear Regression\",\n    x= \" \",\n    y = \"Accident (1 for Yes, 0 for No)\"\n  )\n```\n\n::: {.cell-output-display}\n![](blog-post-4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n  From our last blog post, we saw that one of the most big, obvious trends was that the Driver’s License State category was predominantly from Maryland. Since this is to be expected given that the data is from a county in Maryland, this may be a boring part of the data. So, we chose to explore some other relationships that might be confounded by this major trend we identified.\n  To explore our data further in this way, we first looked at relationships among different variables and groupings by looking for trends or patterns between race categories and arrest types as well as race categories and accident types. We then focused on developing a better understanding of the specific relationship between race and arrest types and race and accident types by also including the time of day to see if this too affects the outcome of the traffic violation.\n  Beginning to think about statistical modeling, the response variable that we are interested in is the outcome of the traffic violation, which in our data is represented as arrest type and accident type. The predictor variables we are interested in are race and time of day. To include time of day we would need to perform some transformations to better capture the relationships between the variables. Since time is going in a loop as it goes to the end of the day and then the values go back down to 0, we need to transform this column of the data to be continuous instead of a cycle. We will fit a linear model so that we can see how the predictor variables affect the response variable. For this, we will also need another transformation to represent the outcome of the traffic violation as binary variables. For the arrest type, we can choose “A – Marked Patrol” to be represented by 1, and each other arrest type to be 0. Similarly, for the accident column, we can choose “Yes” to be 1 and “No” to be 0. After these transformations, we can use the categorical variables in the linear model. For our initial statistical modeling, we began by using a linear model with the time of stop as the response variable and accident type and race as predictor variables. For this initial modeling, we transformed “Hispanic” to be 1 and every other race category to be 0. For our future statistical modeling, we will also include the other race categories to see the trends and patterns between the different categories. This initial model showed a straight horizontal line after the regression, so in our further analysis we will add more continuous variables to find a model that reveals more about the data and its trends.\n\n\n",
    "supporting": [
      "blog-post-4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}